name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Run pipeline on pushes to the main branch
  pull_request:
    branches:
      - main  # Run pipeline on pull requests to the main branch

jobs:
  # Linting Job
  lint:
    name: PHP Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.2]  # Test against multiple PHP versions
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse src

  # Testing Job
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.2]  # Test against multiple PHP versions
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring  # Add required PHP extensions here
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress
      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit

  # 3. Auto-deploy to Packagist
  deploy:
    name: Deploy to Packagist
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    if: github.ref == 'refs/heads/main'  # Only on main branch
    steps:
      - uses: actions/checkout@v3
      - name: Trigger Packagist Update
        run: |
          curl -X POST https://packagist.org/api/update-package?username=kwakuAgyeman \
          -d '{"repository":{"url":"https://github.com/kwakuOfosuAgyeman/ai-assistant"}}' \
          -H "Authorization: Bearer ${{ secrets.PACKAGIST_TOKEN }}" \
          -H "Content-Type: application/json"
